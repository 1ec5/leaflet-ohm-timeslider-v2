L.Control.OHMTimeSlider=L.Control.extend({options:{position:"bottomright",vectorlayer:null,sourcename:"osm",range:null,date:null,stepspeed:1},initialize:function(options={}){L.setOptions(this,options);if(!this.options.range){const current_year=(new Date).getFullYear();this.options.range=[`${current_year-100}-01-01`,`${current_year}-12-31`]}if(!this.options.date){this.options.date=this.options.range[0]}if(!this.options.vectorlayer)throw`OHMTimeSlider: missing required vectorlayer`;if(!this.isValidDate(this.options.date))throw"OHMTimeSlider: date must be YYYY-MM-DD format";if(!this.isValidDate(this.options.range[0]))throw"OHMTimeSlider: range lower date must be YYYY-MM-DD format";if(!this.isValidDate(this.options.range[1]))throw"OHMTimeSlider: range upper date must be YYYY-MM-DD format"},onAdd:function(map){if(!this.options.vectorlayer._glMap)throw"OHMTimeSlider: vectorlayer is not a MBGL layer, or is not yet initialized";this.constants={};this.constants.onedaystep=1/365;const container=L.DomUtil.create("div","leaflet-ohm-timeslider");L.DomEvent.disableClickPropagation(container);L.DomEvent.disableScrollPropagation(container);container.innerHTML=`
        <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.1/css/all.css" />
        <div>
            <div>
                Range:
                <input type="text" pattern="\-?\d\d\d\d\-\d\d\-\d\d" class="leaflet-ohm-timeslider-dateinput" data-timeslider="rangemin" placeholder="yyyy-mm-dd" value="${this.options.range[0]}" />
                <input type="text" pattern="\-?\d\d\d\d\-\d\d\-\d\d" class="leaflet-ohm-timeslider-dateinput" data-timeslider="rangemax" placeholder="yyyy-mm-dd" value="${this.options.range[1]}" />
            </div>
            <div>
                Current:
                <span data-timeslider="prev" role="button" tabindex="0" class="fa fa-minus" title="Go back one step"></span>
                &nbsp;
                <input type="text" pattern="\-?\d\d\d\d\-\d\d\-\d\d" class="leaflet-ohm-timeslider-dateinput" data-timeslider="currentdate" placeholder="yyyy-mm-dd" value="${this.options.date}" />
                &nbsp;
                <span data-timeslider="next" role="button" tabindex="0" class="fa fa-plus" title="Go forward one step"></span>
            </div>
        </div>
        <div>
            <input type="range" min="" max="" step="${this.constants.onedaystep}" class="leaflet-ohm-timeslider-sliderbar" data-timeslider="slider" />
        </div>
        <div>
            Step speed:
            <select data-timeslider="stepspeed">
                <option value="1">1 day</option>
                <option value="30">30 days</option>
                <option value="365">1 year</option>
                <option value="1825">5 years</option>
                <option value="3650">10 years</option>
                <option value="9125">25 years</option>
                <option value="36500">100 years</option>
            </select>
            &nbsp;
            <span data-timeslider="play" role="button" tabindex="0" class="fa fa-play" title="Play"></span>
            <span data-timeslider="pause" role="button" tabindex="0" class="fa fa-pause" title="Pause"></span>
        </div>
        `;this.controls={};this.controls.inputrangeemin=container.querySelector('[data-timeslider="rangemin"]');this.controls.inputrangeemax=container.querySelector('[data-timeslider="rangemax"]');this.controls.inputdate=container.querySelector('[data-timeslider="currentdate"]');this.controls.slider=container.querySelector('[data-timeslider="slider"]');this.controls.playbutton=container.querySelector('[data-timeslider="play"]');this.controls.pausebutton=container.querySelector('[data-timeslider="pause"]');this.controls.playnext=container.querySelector('[data-timeslider="next"]');this.controls.playprev=container.querySelector('[data-timeslider="prev"]');this.controls.stepspeed=container.querySelector('[data-timeslider="stepspeed"]');L.DomEvent.on(this.controls.inputrangeemin,"change",()=>{this.setRange(this.getRange())});L.DomEvent.on(this.controls.inputrangeemax,"change",()=>{this.setRange(this.getRange())});L.DomEvent.on(this.controls.inputdate,"change",()=>{this.setDate(this.getDate())});L.DomEvent.on(this.controls.slider,"input",()=>{this.setDateFromSlider()});L.DomEvent.on(this.controls.playbutton,"click",()=>{this.autoplayStart()});L.DomEvent.on(this.controls.playbutton,"keydown",event=>{if(event.key=="Enter"||event.key=="Space")event.target.click()});L.DomEvent.on(this.controls.pausebutton,"click",()=>{this.autoplayPause()});L.DomEvent.on(this.controls.pausebutton,"keydown",event=>{if(event.key=="Enter"||event.key=="Space")event.target.click()});L.DomEvent.on(this.controls.playnext,"click",()=>{this.autoplayNext()});L.DomEvent.on(this.controls.playnext,"keydown",event=>{if(event.key=="Enter"||event.key=="Space")event.target.click()});L.DomEvent.on(this.controls.playprev,"click",()=>{this.autoplayPrevious()});L.DomEvent.on(this.controls.playprev,"keydown",event=>{if(event.key=="Enter"||event.key=="Space")event.target.click()});setTimeout(()=>{this._addDateFiltersToVectorLayers();this.refreshUiAndFiltering()},.1*1e3);this.autoplaytimer=null;this.autoplayPause();this.setStepSpeed(this.options.stepspeed);this._map=map;return container},onRemove:function(){this.autoplayPause();this._removeDateFiltersFromVectorLayers()},getDate:function(asdecimal=false){const thedate=this.controls.inputdate.value;return asdecimal?decimaldate.iso2dec(thedate):thedate},getRange:function(asdecimal=false){const therange=[this.controls.inputrangeemin.value,this.controls.inputrangeemax.value];if(asdecimal){therange[0]=decimaldate.iso2dec(therange[0]);therange[1]=decimaldate.iso2dec(therange[1])}return therange},setDate:function(newdatestring,redraw=true){const ymd=newdatestring.split("-");if(!this.isValidDate(newdatestring)||!decimaldate.isvalidmonthday(ymd[0],ymd[1],ymd[2])){console.error(`OHMTimeSlider: setDate() invalid date: ${newdatestring}`);newdatestring=this.options.date}this.controls.inputdate.value=newdatestring;const isoutofrange=this.checkDateOutOfRange();if(isoutofrange<0)this.setRange([newdatestring,this.getRange()[1]],false);else if(isoutofrange>0)this.setRange([this.getRange()[0],newdatestring],false);if(redraw){this.refreshUiAndFiltering()}},setRange:function(newdatepair,redraw=true){let newmindate=newdatepair[0];let newmaxdate=newdatepair[1];let ymdmin=newmindate.split("-");let ymdmax=newmaxdate.split("-");if(!this.isValidDate(newmaxdate)||!this.isValidDate(newmindate)||!decimaldate.isvalidmonthday(ymdmin[0],ymdmin[1],ymdmin[2])||!decimaldate.isvalidmonthday(ymdmax[0],ymdmax[1],ymdmax[2])){console.error(`setRange: setRange() invalid range: ${newmindate} - ${newmaxdate}`);newmindate=this.options.range[0];newmaxdate=this.options.range[1];ymdmin=newmindate.split("-");ymdmax=newmaxdate.split("-")}const decmin=decimaldate.iso2dec(newmindate);const decmax=decimaldate.iso2dec(newmaxdate);if(decmin>=decmax)return console.error(`OHMTimeSlider: setRange() min date must be less than max date: ${newmindate} - ${newmaxdate}`);this.controls.inputrangeemin.value=newmindate;this.controls.inputrangeemax.value=newmaxdate;const isoutofrange=this.checkDateOutOfRange();if(isoutofrange<0)this.setDate(newmaxdate,false);else if(isoutofrange>0)this.setDate(newmindate,false);if(redraw){this.refreshUiAndFiltering()}},setDateFromSlider:function(redraw=true){const newdatestring=decimaldate.dec2iso(this.controls.slider.value);this.setDate(newdatestring,redraw)},refreshUiAndFiltering:function(){const decrange=this.getRange(true);const deccurrent=this.getDate(true);this.controls.slider.min=decrange[0];this.controls.slider.max=decrange[1];this.controls.slider.value=deccurrent;this.applyDateFiltering()},applyDateFiltering:function(){this._applyDateFilterToLayers()},_getFilteredVectorLayers(){const mapstyle=this.getRealGlMap().getStyle();if(!mapstyle.sources[this.options.sourcename])throw`OHMTimeSlider: vector layer has no source named ${this.options.sourcename}`;const filterlayers=mapstyle.layers.filter(layer=>layer.source==this.options.sourcename);return filterlayers},_addDateFiltersToVectorLayers:function(){const osmfilteringclause=["any",[">","1","0"]];const vecmap=this.getRealGlMap();const layers=this._getFilteredVectorLayers();layers.forEach(function(layer){const oldfilters=vecmap.getFilter(layer.id);layer.oldfiltersbackup=oldfilters?oldfilters.slice():oldfilters;let newfilters;if(oldfilters===undefined){newfilters=["all",osmfilteringclause]}else if(oldfilters[0]==="all"){newfilters=oldfilters.slice();newfilters.splice(1,0,osmfilteringclause)}else if(oldfilters[0]==="any"){newfilters=["all",osmfilteringclause,[oldfilters]]}else if(Array.isArray(oldfilters)){newfilters=["all",osmfilteringclause,oldfilters]}else{console.error(oldfilters);throw`OHMTimeSlider: _setupDateFiltersForLayers() got unexpected filtering condition on layer ${layer.id}`}vecmap.setFilter(layer.id,newfilters)})},_removeDateFiltersFromVectorLayers:function(){const vecmap=this.getRealGlMap();this._getFilteredVectorLayers().forEach(layer=>{vecmap.setFilter(layer.id,layer.oldfiltersbackup)})},_applyDateFilterToLayers:function(){const deccurrent=this.getDate(true);const datesubfilter=["all",["any",["!has","start_decdate"],["<=","start_decdate",deccurrent]],["any",["!has","end_decdate"],[">=","end_decdate",deccurrent]]];const vecmap=this.getRealGlMap();const layers=this._getFilteredVectorLayers();layers.forEach(layer=>{const newfilters=vecmap.getFilter(layer.id).slice();newfilters[1][2]=datesubfilter.slice();vecmap.setFilter(layer.id,newfilters)})},getAutoplayRunning:function(){return this.autoplaytimer?true:false},getStepSpeed:function(){return parseInt(this.controls.stepspeed.value)},setStepSpeed:function(newspeed){const isoption=this.controls.stepspeed.querySelector(`option[value="${newspeed}"]`);if(!isoption)return console.error(`OHMTimeSlider: setStepSpeed() invalid speed option: ${newspeed}`);this.controls.stepspeed.value=newspeed},autoplayStart:function(){this.controls.playbutton.style.display="none";this.controls.pausebutton.style.display="";if(this.autoplaytimer)return;this.autoplaytimer=setInterval(()=>{this.autoplayNext()},1*1e3)},autoplayPause:function(){this.controls.playbutton.style.display="";this.controls.pausebutton.style.display="none";if(!this.autoplaytimer)return;clearInterval(this.autoplaytimer);this.autoplaytimer=undefined},autoplayNext:function(){const daystojump=this.getStepSpeed();const slidethismuch=this.constants.onedaystep*daystojump;const oldvalue=this.controls.slider.value;this.controls.slider.value=parseFloat(this.controls.slider.value)+slidethismuch;if(this.controls.slider.value!=oldvalue){this.controls.slider.dispatchEvent(new Event("input"))}},autoplayPrevious:function(){const daystojump=parseInt(this.controls.stepspeed.value);const slidethismuch=this.constants.onedaystep*daystojump;const oldvalue=this.controls.slider.value;this.controls.slider.value=parseFloat(this.controls.slider.value)-slidethismuch;if(this.controls.slider.value!=oldvalue){this.controls.slider.dispatchEvent(new Event("input"))}},isValidDate:function(datestring){return datestring.match(/^\-?\d\d\d\d\-\d\d\-\d\d$/)},checkDateOutOfRange:function(){const deccurrent=this.getDate(true);const decrange=this.getRange(true);if(deccurrent<decrange[0])return-1;else if(deccurrent>decrange[1])return 1;else return 0},getRealGlMap:function(){return this.options.vectorlayer._glMap}});